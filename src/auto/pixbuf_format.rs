// This file was generated by gir (d8a605d) from gir-files (469db10)
// DO NOT EDIT

use ffi;
use glib::translate::*;
use glib_ffi;
use gobject_ffi;
use std::mem;
use std::ptr;

glib_wrapper! {
    pub struct PixbufFormat(Boxed<ffi::GdkPixbufFormat>);

    match fn {
        copy => |ptr| ffi::gdk_pixbuf_format_copy(mut_override(ptr)),
        free => |ptr| ffi::gdk_pixbuf_format_free(ptr),
        get_type => || ffi::gdk_pixbuf_format_get_type(),
    }
}

impl PixbufFormat {
    pub fn get_description(&mut self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::gdk_pixbuf_format_get_description(self.to_glib_none_mut().0))
        }
    }

    pub fn get_extensions(&mut self) -> Vec<String> {
        unsafe {
            FromGlibPtrContainer::from_glib_full(ffi::gdk_pixbuf_format_get_extensions(self.to_glib_none_mut().0))
        }
    }

    pub fn get_license(&mut self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::gdk_pixbuf_format_get_license(self.to_glib_none_mut().0))
        }
    }

    pub fn get_mime_types(&mut self) -> Vec<String> {
        unsafe {
            FromGlibPtrContainer::from_glib_full(ffi::gdk_pixbuf_format_get_mime_types(self.to_glib_none_mut().0))
        }
    }

    pub fn get_name(&mut self) -> Option<String> {
        unsafe {
            from_glib_full(ffi::gdk_pixbuf_format_get_name(self.to_glib_none_mut().0))
        }
    }

    pub fn is_disabled(&mut self) -> bool {
        unsafe {
            from_glib(ffi::gdk_pixbuf_format_is_disabled(self.to_glib_none_mut().0))
        }
    }

    #[cfg(any(feature = "v2_36", feature = "dox"))]
    pub fn is_save_option_supported(&mut self, option_key: &str) -> bool {
        unsafe {
            from_glib(ffi::gdk_pixbuf_format_is_save_option_supported(self.to_glib_none_mut().0, option_key.to_glib_none().0))
        }
    }

    pub fn is_scalable(&mut self) -> bool {
        unsafe {
            from_glib(ffi::gdk_pixbuf_format_is_scalable(self.to_glib_none_mut().0))
        }
    }

    pub fn is_writable(&mut self) -> bool {
        unsafe {
            from_glib(ffi::gdk_pixbuf_format_is_writable(self.to_glib_none_mut().0))
        }
    }

    pub fn set_disabled(&mut self, disabled: bool) {
        unsafe {
            ffi::gdk_pixbuf_format_set_disabled(self.to_glib_none_mut().0, disabled.to_glib());
        }
    }
}
